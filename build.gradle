plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.asciidoctor.convert" version "1.5.9.2" //Spring_Rest_Docs asciidoctor 플러그인 적용
}

//checkstyle 설정파일 별도 checkstyle.gradle파일로 분리
apply from: 'checkstyle.gradle'

group = 'com.dev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // spring-boot-starter-web와 Log4j2 라이브러리 충돌로 인한 설정
    compile.exclude module: 'spring-boot-starter-logging'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'mysql', name: 'mysql-connector-java'
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.1.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
    // 로그인 세션처리를 하기위해 추가
    implementation group: 'org.springframework.session', name: 'spring-session-core'
    // 요청파라미터 검증하기 위해 추가
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.4.3'
    //javax.annotation.meta.When 경고로 인해 구글에서 해당 버그 수정한 의존성 추가
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    // Redis 세션 적용하기위한 의존성 추가
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
    implementation group: 'org.springframework.session', name: 'spring-session-data-redis'
    // Aop 적용하기 위해 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //Spring_Rest_Docs 의존성 추가
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'
}

//Spring_Rest_Docs 생성 snippets 출력 위치 정의
ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir //test snippets 디렉터리를 출력으로 추가 하도록 작업 구성
}

//Spring_Rest_Docs asciidoctor 작업 구성
asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}